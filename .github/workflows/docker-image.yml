name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
    environment: default
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.GCP_IMAGE_NAME }}

  google:
    needs: docker
    environment: default
    runs-on: ubuntu-latest
    steps:
      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Connect to VM
        uses: google-github-actions/ssh-compute@v1
        with:
          instance_name: '${{ vars.GCP_INSTANCE_NAME }}'
          zone: 'us-central1-c'
          ssh_private_key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          command: |
            CONTAINER_NAME=flask
            if [ -z "$CONTAINER_NAME" ]; then
              echo "Usage: Set CONTAINER_NAME=<container_name>"
            else
              if docker ps --filter "name=^${CONTAINER_NAME}$" --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
                echo "Container '$CONTAINER_NAME' is running. Stopping and removing it..."
                docker stop "$CONTAINER_NAME"
                docker rm "$CONTAINER_NAME"
                echo "Container '$CONTAINER_NAME' has been stopped and removed."
              else
                echo "Container '$CONTAINER_NAME' is not running."
              fi
            fi
            docker pull ${{ vars.GCP_IMAGE_NAME }}
            docker run -d -p 80:5000 --name flask -e POSTGRES_HOST=${{ secrets.NEON_CONNECTION_STRING }} ${{ vars.GCP_IMAGE_NAME }}
